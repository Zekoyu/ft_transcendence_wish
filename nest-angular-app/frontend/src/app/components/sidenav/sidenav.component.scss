$sidenav-width: 275px;
$sidenav-transition: 0.3s ease-in-out;

@media (max-width: 980px)
{
	.hidden
	{
		transform: translateX(-$sidenav-width);
	}
	.sidenav-toggle
	{
		display: block;
		opacity: 1;
	}
}

@media (min-width: 980px)
{
	.hidden
	{
		transform: translateX(0);
	}
	.sidenav-toggle
	{
		display: none;
		opacity: 0;
	}
}

.sidenav
{
	position: fixed;
	top: 0;
	left: 0;
	width: $sidenav-width;
	height: 100%;
	transition: transform $sidenav-transition;
	background-color: #82735C;
}

@keyframes fadeIn
{
	from
	{
		opacity: 0;
	}
	to
	{
		opacity: 1;
	}
}

.sidenav-toggle
{
	position: fixed;
	top: 7px;
	left: 7px + $sidenav-width;
	padding: 10px 15px;
	cursor: pointer;
	transition: transform $sidenav-transition;
	color: white;
	border-radius: 5px;
	background-color: #838383;

	&:hover
	{
		background-color: #939393;
	}
}

.pushable-back
{
	width: 250px;
	border: none;
	border-radius: 999px;
	outline: none;
	background: rgb(74, 67, 93);
}

.pushable-front
{
	font-size: 1rem;
	display: block;
	padding: 10px 32px;
	cursor: pointer;
	transition: transform 250ms;
	transform: translateY(-5px);
	color: white;
	border-radius: 999px;
	background: rgb(140, 132, 166);
	will-change: transform;
	// nested .hover will compile to .pushable-front :hover as nested .child will compile to .pushable-front .child
	// to "stick them" together use & so that it becomes .pushable-front:hover or pushable-front.child
	&:hover
	{
		transform: translateY(-6px);
		background-color: rgb(149, 140, 180);
	}

	&:active
	{
		transform: translateY(-2px);
	}
}

ul
{
	display: flex;
	align-items: center;
	flex-direction: column;
	margin-top: 15px;
	list-style: none;
	gap: 15px;
}